name: Create basic and base java pipelines

on: workflow_dispatch

jobs:
  precheck:
    runs-on: ubuntu-latest
    container:  zepben/pipeline-basic
    outputs:
      labels: ${{ steps.tags.outputs.labels }}
      tag: ${{ steps.tags.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Work around git permission issue
        run: |
          dname=$(echo ${{github.repository}} | cut -d'/' -f2)
          git config --global --add safe.directory /__w/$dname/$dname
        shell: sh

      - name: Figure out the tag for the build
        id: tags
        shell: bash
        run: |
          tag=$(cat changelog.md | grep UNRELE | grep -o "[0-9]\+\.[0-9]\+\.[0-9]\+")
          source /scripts/common.sh
          check_tag_exists $tag

          if [ ${GITHUB_REF_NAME} == "main" ]; then
            echo "labels=[$tag, latest]" >> "${GITHUB_OUTPUT}"
            echo "tag=$tag" >> "${GITHUB_OUTPUT}"
          else
            echo "labels=[test]" >> "${GITHUB_OUTPUT}"
            echo "tag=test" >> "${GITHUB_OUTPUT}"
          fi

  build-basic-pipeline:
    runs-on: ubuntu-latest
    container:  hashicorp/packer:1.11
    needs: [precheck]
    env:
      DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Packer Version
        run: |
          packer version

      - name: Create zepben/pipeline-basic pipeline container
        run: |
          apk add docker tar
          mkdir /build
          export PACKER_CONFIG_DIR=/build
          cd pipelines/basic/
          packer init basic.pkr.hcl
          packer validate basic.pkr.hcl
          packer build -on-error=abort -var container_version_labels="${{ needs.precheck.outputs.labels }}" -var dockerhub_user=$DOCKER_HUB_USER -var dockerhub_pw=$DOCKER_HUB_ACCESS_TOKEN basic.pkr.hcl
        shell: bash

  build-java-amazoncorretto:
    runs-on: ubuntu-latest
    container:  hashicorp/packer:1.11
    needs: [precheck]
    env:
      DOCKER_HUB_USER: ${{ secrets.DOCKER_HUB_USER }}
      DOCKER_HUB_ACCESS_TOKEN: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Packer Version
        run: |
          packer version

      - name: Create zepben/pipeline-java-amazoncorretto
        run: |
          apk add docker tar
          mkdir /build
          export PACKER_CONFIG_DIR=/build
          cd pipelines/Java/
          packer init amazoncorretto-config.pkr.hcl
          packer validate amazoncorretto-config.pkr.hcl
          packer build -on-error=abort -var container_version_labels="${{ needs.precheck.outputs.labels }} "-var dockerhub_user=$DOCKER_HUB_USER -var dockerhub_pw=$DOCKER_HUB_ACCESS_TOKEN amazoncorretto-config.pkr.hcl
        shell: bash

      # Now that we've built the container, built java-ewb in superpom repo
      - name: Build java-ewb pipeline
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.CI_GITHUB_TOKEN }}
          repository: "zepben/evolve-super-pom"
          event-type: "build-container"
          client-payload: '{"labels": "${{ needs.precheck.outputs.labels }}", "tag": "${{ needs.precheck.outputs.tag }}"}'
        continue-on-error: true



  finalise-version:
    runs-on: ubuntu-latest
    if: ${{ github.ref_name == 'main' }}
    container:  zepben/pipeline-basic:5.7.5
    needs: [precheck, build-basic-pipeline, build-java-amazoncorretto]

    steps:
      - name: Checkout release branch
        run: |
          git config remote.origin.fetch "+refs/heads/*:refs/remotes/origin/*"
          git fetch --all
          git checkout release
        shell: bash

      - name: Work around git permission issue
        run: |
          dname=$(echo ${{github.repository}} | cut -d'/' -f2)
          git config --global --add safe.directory /__w/$dname/$dname
        shell: sh
      
      - name: Create tag and update changelog
        shell: bash
        run: |
          source /scripts/common.sh
          sed -i "s/UNRELEASED/$(date +'%Y-%m-%d')/g" changelog.md
          # Update changelog version
          IFS='.' read -r -a array <<< "$version"
          array[3]=$((++array[3]))
          release_notes_template="### Breaking Changes\n* None.\n\n### New Features\n* None.\n\n### Enhancements\n* None.\n\n### Fixes\n* None.\n\n### Notes\n* None.\n"
          sed -i "/^# .*/a ## [${array}] - UNRELEASED\n$release_notes_template" changelog.md

          stage_file changelog.md

          # Push release branch to repo
          new_version=$array
          commit_finalize_version

          # Merge and tag
          git merge origin/release
          git push origin ${GITHUB_REF/refs\/heads\//}
          git tag "${{ needs.precheck.outputs.tag }}"
          git push --tags
